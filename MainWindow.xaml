<adonisControls:AdonisWindow x:Class="LogAnalyzerWPF.MainWindow"
                             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                             xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                             xmlns:local="clr-namespace:LogAnalyzerWPF"
                             mc:Ignorable="d"
                             x:Name="mMainWindow"
                             Title="Log analyzer" Height="450" Width="800" MinHeight="450" MinWidth="800" WindowStartupLocation="CenterScreen" WindowState="Maximized" IconVisibility="Collapsed" ShrinkTitleBarWhenMaximized="False">
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{x:Static local:MainWindow.CmdEscape}"/>
        <KeyBinding Key="W" Modifiers="Ctrl" Command="{x:Static local:MainWindow.CmdCloseTabItem}"/>
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{x:Static local:MainWindow.CmdShowPalette}"/>
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{x:Static local:MainWindow.CmdShowInspection}"/>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{x:Static local:MainWindow.CmdShowFind}"/>
        <KeyBinding Key="Backspace" Modifiers="Ctrl" Command="{x:Static local:MainWindow.CmdGotoParentLine}"/>
        <!--KeyBinding Key="Left" Modifiers="Alt" Command="{x:Static local:CommandResults.CommandNav}" CommandParameter="left"/>
        <KeyBinding Key="Right" Modifiers="Alt" Command="{x:Static local:CommandResults.CommandNav}" CommandParameter="right"/>
        <KeyBinding Key="Up" Modifiers="Alt" Command="{x:Static local:CommandResults.CommandNav}" CommandParameter="up"/>
        <KeyBinding Key="Down" Modifiers="Alt" Command="{x:Static local:CommandResults.CommandNav}" CommandParameter="down"/-->
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.CmdEscape}" Executed="onCmdEscape"/>
        <CommandBinding Command="{x:Static local:MainWindow.CmdCloseTabItem}" Executed="onCmdCloseTabItem"/>
        <CommandBinding Command="{x:Static local:MainWindow.CmdShowPalette}" Executed="onCmdActionShowPalette"/>
        <CommandBinding Command="{x:Static local:MainWindow.CmdShowInspection}" Executed="onCmdActionShowInspection"/>
        <CommandBinding Command="{x:Static local:MainWindow.CmdShowFind}" Executed="onCmdActionShowFind"/>
        <CommandBinding Command="{x:Static local:MainWindow.CmdGotoParentLine}" Executed="onCmdActionGotoParentLine" CanExecute="onCmdCanExecuteActionGotoParentLine"/>
    </Window.CommandBindings>
    <Window.Resources>
        <local:BooleanToVisibilityHiddenConverter x:Key="BooleanToVisibilityHiddenConverter" />
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <adonisControls:AdonisWindow.TitleBarContent>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}" Click="onLightbulb">
                <ContentControl>
                    <Path Margin="{adonisUi:Space 1}" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource IconLightbulb}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                </ContentControl>
            </Button>
            <Button Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}" Click="onHelp">
                <ContentControl>
                    <Path Margin="{adonisUi:Space 1}" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource IconHelp}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                </ContentControl>
            </Button>
        </StackPanel>
    </adonisControls:AdonisWindow.TitleBarContent>
    <Grid>
        <TabControl x:Name="mTabControlMain" Margin="0" Padding="0" ItemsSource="{Binding Repos}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SelectionChanged="mTabControlMain_SelectionChanged" >
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border Name="Border" Margin="0,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" >
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Stretch" ContentSource="Header" RecognizesAccessKey="True"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="100" />
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabControl.Template>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <UniformGrid Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel" IsItemsHost="True" Rows="1"/>

                        <Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Click="onAddTabItem">
                            <Path Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource IconTabAdd}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                        </Button>

                        <ContentPresenter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel x:Name="DockPanel" LastChildFill="True" Background="Transparent">
                        <Button DockPanel.Dock="Right" Margin="4" x:Name="ButtonClose" VerticalAlignment="Center" Visibility="{Binding ElementName=DockPanel, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityHiddenConverter}, FallbackValue=Visible}"
                                Command="{x:Static local:MainWindow.CmdCloseTabItem}"
                                CommandParameter="{Binding Mode=OneWay}">
                            <Path Width="10" Height="10" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource IconTabClose}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                        </Button>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path Stretch="Uniform" VerticalAlignment="Center"
                                  Visibility="{Binding ShowParent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}"
                                  Data="{StaticResource IconTabParent}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                            <Path Margin="10,0,0,0" Stretch="Uniform" VerticalAlignment="Center"
                                  Visibility="{Binding ShowChild, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}"
                                  Data="{StaticResource IconTabChild}" Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                            <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding Path=Description}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" FontWeight="Bold" />
                        </StackPanel>
                    </DockPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <ItemContainerTemplate>
                    <ContentControl Content="{Binding Path=Content}"/>
                </ItemContainerTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </Grid>
</adonisControls:AdonisWindow>
