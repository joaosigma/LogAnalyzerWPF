<UserControl x:Class="LogAnalyzerWPF.Controls.TabItemRepo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LogAnalyzerWPF.Controls"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ActionButtonForegroundBrush" Color="{DynamicResource {x:Static adonisUi:Colors.ForegroundColor}}" />
        <Style x:Key="ActionButtonPathStyle" TargetType="Path">
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Fill" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
        </Style>
        <Storyboard x:Key="ActionButtonAnimationNotice">
            <ColorAnimation From="{DynamicResource {x:Static adonisUi:Colors.ForegroundColor}}" To="Red" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"
                            Storyboard.TargetName="mButtonInspectionPath"
                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
            </ColorAnimation>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static local:TabItemRepo.CmdSearchNext}" Executed="onCmdSearchNext" />
    </UserControl.CommandBindings>
    <Grid x:Name="mMainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*" MinWidth="300"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*" MinWidth="200"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Margin="10,5,10,5" Width="30">
            <Button Margin="0,5,0,5" x:Name="mButtonInspection" Click="onButtonInspection">
                <ContentControl>
                    <Path Name="mButtonInspectionPath" Style="{StaticResource ActionButtonPathStyle}" Data="{StaticResource IconOptionInfo}" Fill="Transparent"/>
                </ContentControl>
            </Button>
            <Button Margin="0,5,0,5" Click="onButtonCommands">
                <ContentControl>
                    <Path Style="{StaticResource ActionButtonPathStyle}" Data="{StaticResource IconOptionPalette}" />
                </ContentControl>
            </Button>
            <Button Margin="0,5,0,5" Click="onButtonMethod">
                <ContentControl>
                    <Path Style="{StaticResource ActionButtonPathStyle}" Data="{StaticResource IconOptionFunction}" />
                </ContentControl>
            </Button>
            <Button Margin="0,5,0,5" Click="onButtonClear">
                <ContentControl>
                    <Path Style="{StaticResource ActionButtonPathStyle}" Data="{StaticResource IconOptionClear}" />
                </ContentControl>
            </Button>
            <Button Margin="0,5,0,5" Click="onButtonSave">
                <ContentControl>
                    <Path Style="{StaticResource ActionButtonPathStyle}" Data="{StaticResource IconOptionSave}" />
                </ContentControl>
            </Button>
        </StackPanel>
        <Border Grid.Column="1" BorderThickness="1,0,1,0" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
            <Grid x:Name="mLinesGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" x:Name="mBorderCommands" Padding="0,0,0,5" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" HorizontalAlignment="Stretch" />
                <Border Grid.Row="2" x:Name="mBorderFind" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" HorizontalAlignment="Stretch">
                    <DockPanel LastChildFill="True">

                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="{adonisUi:Space 1, 1, 1, 1}">
                            <Button Name="mFindButtonPrev" Content="Search" TabIndex="2" />
                            <Button Name="mFindButtonProx" Margin="{adonisUi:Space 1, 0, 0, 0}" Content="Previous" TabIndex="3" Visibility="Collapsed" />
                        </StackPanel>

                        <CheckBox Name="mFindIsRegex" DockPanel.Dock="Right" TabIndex="1" Margin="{adonisUi:Space 1, 1, 1, 1}" Content="Regex" />

                        <TextBox Name="mFindInput" TabIndex="0" AcceptsReturn="False" AcceptsTab="False" HorizontalAlignment="Stretch" BorderThickness="0" adonisExtensions:WatermarkExtension.Watermark="text to find" Margin="{adonisUi:Space 1, 1, 1, 1}" />
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <GridSplitter Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="3" Height="Auto" />
    </Grid>
</UserControl>
